stages:
  - build
  - dockerize
  - deploy

variables:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: tiim32/frontend

build:
  stage: build
  image: node:18
  script:
    - npm install
    - npm run build
  artifacts:
      paths:
        - dist/
  only:
    - branches


dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - |
      echo "DOCKER_REGISTRY: $DOCKER_REGISTRY"
      echo "DOCKER_IMAGE: $DOCKER_IMAGE"
      echo "CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA"
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
      docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE-$CI_COMMIT_SHORT_SHA .
      docker push $DOCKER_REGISTRY/$DOCKER_IMAGE-$CI_COMMIT_SHORT_SHA
      docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE-$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE
      docker push $DOCKER_REGISTRY/$DOCKER_IMAGE
  only:
    - main


deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - || echo "Failed to add SSH key"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "
      cd /opt/web-project/frontend &&
      sudo docker-compose down &&
      sudo docker-compose pull &&
      sudo docker-compose up -d"
  only:
    - main
